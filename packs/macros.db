{"name":"Example for Toggling Convenient Effect for Selected Tokens","type":"script","author":"EtluHVpGWyEPNP7F","img":"icons/svg/dice-target.svg","scope":"global","command":"// Replace first argument with any available effect from the list\ngame.dfreds.effectInterface.toggleEffect('Bane');","folder":null,"sort":0,"permission":{"default":0,"EtluHVpGWyEPNP7F":3},"flags":{"core":{"sourceId":"Macro.HPV7FKAtuvJ86FQq"},"advanced-macros":{"runAsGM":false}},"_id":"3Pal9yFNjzUD3rYI"}
{"name":"Example for Toggling Effects on Specific Actors","type":"script","author":"EtluHVpGWyEPNP7F","img":"icons/svg/dice-target.svg","scope":"global","command":"/* \n  FOR ADVANCED USERS\n    \n    For the first argument, replace with any available effect\n    from the list.\n\n    For every other argument, replace with any actor UUIDs.\n    UUIDs can be gathered in variety of ways, such as those\n    provided below.\n*/\n\nlet fromActorId = game.actors.get('some actor id').uuid; // get UUID based on some actor ID (replace it)\nlet fromTokenId = canvas.tokens.get('some token id').actor.uuid; // get UUID based on some token ID (replace it)\nlet fromActorName = game.actors.find(actor => actor.data.name == 'Merric (Halfling Barbarian)')?.uuid; // get UUID based on first actor name that matches\ngame.dfreds.effectInterface.toggleEffect('Aid', { uuids: [fromActorId, fromTokenId, fromActorName] });\n\n\nlet actorUuids = canvas.tokens.controlled.map(token => token.actor.uuid); // get multiple uuids from controlled tokens\ngame.dfreds.effectInterface.toggleEffect('Bane', { uuids: actorUuids });","folder":null,"sort":0,"permission":{"default":0,"EtluHVpGWyEPNP7F":3},"flags":{"core":{"sourceId":"Macro.HPV7FKAtuvJ86FQq"},"advanced-macros":{"runAsGM":false}},"_id":"NmrX1Avxerr2KBe8"}
